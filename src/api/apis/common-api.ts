/* tslint:disable */
/* eslint-disable */
/**
 * Open Data Hub Tourism Api
 * Open Data Hub Tourism Api based on .Net Core with PostgreSQL
 *
 * OpenAPI spec version: v1
 * Contact: help@opendatahub.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { AreaLinked } from '../models/area-linked';
import { SkiAreaLinked } from '../models/ski-area-linked';
import { SkiRegionLinked } from '../models/ski-region-linked';
/**
 * CommonApi - axios parameter creator
 * @export
 */
export const CommonApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary GET Area Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        singleArea: async (id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling singleArea.');
            }
            const localVarPath = `/v1/Area/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
         /**
         * 
         * @summary GET SkiArea Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        singleSkiArea: async (id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling singleSkiArea.');
            }
            const localVarPath = `/v1/SkiArea/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary GET SkiRegion Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        singleSkiRegion: async (id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling singleSkiRegion.');
            }
            const localVarPath = `/v1/SkiRegion/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },      
        /**
         * 
         * @summary GET Area List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1AreaGet: async (pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/Area`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (pagenumber !== undefined) {
                localVarQueryParameter['pagenumber'] = pagenumber;
            }

            if (pagesize !== undefined) {
                localVarQueryParameter['pagesize'] = pagesize;
            }

            if (idlist !== undefined) {
                localVarQueryParameter['idlist'] = idlist;
            }

            if (odhtagfilter !== undefined) {
                localVarQueryParameter['odhtagfilter'] = odhtagfilter;
            }

            if (active !== undefined) {
                localVarQueryParameter['active'] = active;
            }

            if (odhactive !== undefined) {
                localVarQueryParameter['odhactive'] = odhactive;
            }

            if (source !== undefined) {
                localVarQueryParameter['source'] = source;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (langfilter !== undefined) {
                localVarQueryParameter['langfilter'] = langfilter;
            }

            if (updatefrom !== undefined) {
                localVarQueryParameter['updatefrom'] = updatefrom;
            }

            if (seed !== undefined) {
                localVarQueryParameter['seed'] = seed;
            }

            if (publishedon !== undefined) {
                localVarQueryParameter['publishedon'] = publishedon;
            }

            if (searchfilter !== undefined) {
                localVarQueryParameter['searchfilter'] = searchfilter;
            }

            if (rawfilter !== undefined) {
                localVarQueryParameter['rawfilter'] = rawfilter;
            }

            if (rawsort !== undefined) {
                localVarQueryParameter['rawsort'] = rawsort;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },       
        /**
         * 
         * @summary GET SkiArea List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [latitude] GeoFilter FLOAT Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [longitude] GeoFilter FLOAT Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [radius] Radius INTEGER to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1SkiAreaGet: async (pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, latitude?: string, longitude?: string, radius?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/SkiArea`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (pagenumber !== undefined) {
                localVarQueryParameter['pagenumber'] = pagenumber;
            }

            if (pagesize !== undefined) {
                localVarQueryParameter['pagesize'] = pagesize;
            }

            if (idlist !== undefined) {
                localVarQueryParameter['idlist'] = idlist;
            }

            if (odhtagfilter !== undefined) {
                localVarQueryParameter['odhtagfilter'] = odhtagfilter;
            }

            if (active !== undefined) {
                localVarQueryParameter['active'] = active;
            }

            if (odhactive !== undefined) {
                localVarQueryParameter['odhactive'] = odhactive;
            }

            if (source !== undefined) {
                localVarQueryParameter['source'] = source;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (langfilter !== undefined) {
                localVarQueryParameter['langfilter'] = langfilter;
            }

            if (updatefrom !== undefined) {
                localVarQueryParameter['updatefrom'] = updatefrom;
            }

            if (seed !== undefined) {
                localVarQueryParameter['seed'] = seed;
            }

            if (publishedon !== undefined) {
                localVarQueryParameter['publishedon'] = publishedon;
            }

            if (searchfilter !== undefined) {
                localVarQueryParameter['searchfilter'] = searchfilter;
            }

            if (latitude !== undefined) {
                localVarQueryParameter['latitude'] = latitude;
            }

            if (longitude !== undefined) {
                localVarQueryParameter['longitude'] = longitude;
            }

            if (radius !== undefined) {
                localVarQueryParameter['radius'] = radius;
            }

            if (rawfilter !== undefined) {
                localVarQueryParameter['rawfilter'] = rawfilter;
            }

            if (rawsort !== undefined) {
                localVarQueryParameter['rawsort'] = rawsort;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary GET SkiRegion List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1SkiRegionGet: async (pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/SkiRegion`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (pagenumber !== undefined) {
                localVarQueryParameter['pagenumber'] = pagenumber;
            }

            if (pagesize !== undefined) {
                localVarQueryParameter['pagesize'] = pagesize;
            }

            if (idlist !== undefined) {
                localVarQueryParameter['idlist'] = idlist;
            }

            if (odhtagfilter !== undefined) {
                localVarQueryParameter['odhtagfilter'] = odhtagfilter;
            }

            if (active !== undefined) {
                localVarQueryParameter['active'] = active;
            }

            if (odhactive !== undefined) {
                localVarQueryParameter['odhactive'] = odhactive;
            }

            if (source !== undefined) {
                localVarQueryParameter['source'] = source;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (langfilter !== undefined) {
                localVarQueryParameter['langfilter'] = langfilter;
            }

            if (updatefrom !== undefined) {
                localVarQueryParameter['updatefrom'] = updatefrom;
            }

            if (seed !== undefined) {
                localVarQueryParameter['seed'] = seed;
            }

            if (publishedon !== undefined) {
                localVarQueryParameter['publishedon'] = publishedon;
            }

            if (searchfilter !== undefined) {
                localVarQueryParameter['searchfilter'] = searchfilter;
            }

            if (rawfilter !== undefined) {
                localVarQueryParameter['rawfilter'] = rawfilter;
            }

            if (rawsort !== undefined) {
                localVarQueryParameter['rawsort'] = rawsort;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },      
    }
};

/**
 * CommonApi - functional programming interface
 * @export
 */
export const CommonApiFp = function(configuration?: Configuration) {
    return {
        /**
         * 
         * @summary GET Area Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleArea(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<AreaLinked>>> {
            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).singleArea(id, fields, language, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },              
        /**
         * 
         * @summary GET SkiArea Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleSkiArea(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SkiAreaLinked>>> {
            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).singleSkiArea(id, fields, language, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary GET SkiRegion Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleSkiRegion(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SkiRegionLinked>>> {
            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).singleSkiRegion(id, fields, language, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },       
        /**
         * 
         * @summary GET Area List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1AreaGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<AreaLinked>>>> {
            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).v1AreaGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, rawfilter, rawsort, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },       
        /**
         * 
         * @summary GET SkiArea List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [latitude] GeoFilter FLOAT Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [longitude] GeoFilter FLOAT Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [radius] Radius INTEGER to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1SkiAreaGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, latitude?: string, longitude?: string, radius?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<SkiAreaLinked>>>> {
            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).v1SkiAreaGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, latitude, longitude, radius, rawfilter, rawsort, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary GET SkiRegion List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1SkiRegionGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<SkiRegionLinked>>>> {
            const localVarAxiosArgs = await CommonApiAxiosParamCreator(configuration).v1SkiRegionGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, rawfilter, rawsort, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },       
    }
};

/**
 * CommonApi - factory interface
 * @export
 */
export const CommonApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * 
         * @summary GET Area Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleArea(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<AreaLinked>> {
            return CommonApiFp(configuration).singleArea(id, fields, language, removenullvalues, options).then((request) => request(axios, basePath));
        },       
        /**
         * 
         * @summary GET SkiArea Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleSkiArea(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<SkiAreaLinked>> {
            return CommonApiFp(configuration).singleSkiArea(id, fields, language, removenullvalues, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary GET SkiRegion Single
         * @param {string} id ID of the requested data
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleSkiRegion(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<SkiRegionLinked>> {
            return CommonApiFp(configuration).singleSkiRegion(id, fields, language, removenullvalues, options).then((request) => request(axios, basePath));
        },      
        /**
         * 
         * @summary GET Area List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1AreaGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<AreaLinked>>> {
            return CommonApiFp(configuration).v1AreaGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, rawfilter, rawsort, removenullvalues, options).then((request) => request(axios, basePath));
        },       
        /**
         * 
         * @summary GET SkiArea List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [latitude] GeoFilter FLOAT Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [longitude] GeoFilter FLOAT Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [radius] Radius INTEGER to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1SkiAreaGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, latitude?: string, longitude?: string, radius?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<SkiAreaLinked>>> {
            return CommonApiFp(configuration).v1SkiAreaGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, latitude, longitude, radius, rawfilter, rawsort, removenullvalues, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary GET SkiRegion List
         * @param {number} [pagenumber] 
         * @param {number} [pagesize] 
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
         * @param {string} [source] 
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1SkiRegionGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<SkiRegionLinked>>> {
            return CommonApiFp(configuration).v1SkiRegionGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, rawfilter, rawsort, removenullvalues, options).then((request) => request(axios, basePath));
        },      
    };
};

/**
 * CommonApi - object-oriented interface
 * @export
 * @class CommonApi
 * @extends {BaseAPI}
 */
export class CommonApi extends BaseAPI {
    /**
     * 
     * @summary GET Area Single
     * @param {string} id ID of the requested data
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */
    public async singleArea(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<AreaLinked>> {
        return CommonApiFp(this.configuration).singleArea(id, fields, language, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }    
    /**
     * 
     * @summary GET SkiArea Single
     * @param {string} id ID of the requested data
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */
    public async singleSkiArea(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<SkiAreaLinked>> {
        return CommonApiFp(this.configuration).singleSkiArea(id, fields, language, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * 
     * @summary GET SkiRegion Single
     * @param {string} id ID of the requested data
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */
    public async singleSkiRegion(id: string, fields?: Array<string>, language?: string, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<SkiRegionLinked>> {
        return CommonApiFp(this.configuration).singleSkiRegion(id, fields, language, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }    
    /**
     * 
     * @summary GET Area List
     * @param {number} [pagenumber] 
     * @param {number} [pagesize] 
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
     * @param {string} [source] 
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
     * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
     * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */
    public async v1AreaGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<Array<AreaLinked>>> {
        return CommonApiFp(this.configuration).v1AreaGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, rawfilter, rawsort, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }    
    /**
     * 
     * @summary GET SkiArea List
     * @param {number} [pagenumber] 
     * @param {number} [pagesize] 
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
     * @param {string} [source] 
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
     * @param {string} [latitude] GeoFilter FLOAT Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
     * @param {string} [longitude] GeoFilter FLOAT Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
     * @param {string} [radius] Radius INTEGER to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
     * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
     * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */
    public async v1SkiAreaGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, latitude?: string, longitude?: string, radius?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<Array<SkiAreaLinked>>> {
        return CommonApiFp(this.configuration).v1SkiAreaGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, latitude, longitude, radius, rawfilter, rawsort, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * 
     * @summary GET SkiRegion List
     * @param {number} [pagenumber] 
     * @param {number} [pagesize] 
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of data IDs), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] Taglist Filter (String, Separator &#x27;,&#x27; more Tags possible, available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;common&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active data Filter (possible Values: &#x27;true&#x27; only Active data, &#x27;false&#x27; only Disabled data), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] Odhactive (Published) data Filter (possible Values: &#x27;true&#x27; only published data, &#x27;false&#x27; only not published data, (default:&#x27;null&#x27;)
     * @param {string} [source] 
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {string} [language] Language field selector, displays data and fields in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {string} [langfilter] Language filter (returns only data available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, &#x27;null&#x27; disables Random Sorting, (default:null)
     * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
     * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
     * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonApi
     */
    public async v1SkiRegionGet(pagenumber?: number, pagesize?: number, idlist?: string, odhtagfilter?: string, active?: boolean, odhactive?: boolean, source?: string, fields?: Array<string>, language?: string, langfilter?: string, updatefrom?: string, seed?: string, publishedon?: string, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<Array<SkiRegionLinked>>> {
        return CommonApiFp(this.configuration).v1SkiRegionGet(pagenumber, pagesize, idlist, odhtagfilter, active, odhactive, source, fields, language, langfilter, updatefrom, seed, publishedon, searchfilter, rawfilter, rawsort, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }   
}
