/* tslint:disable */
/* eslint-disable */
/**
 * Open Data Hub Tourism Api
 * Open Data Hub Tourism Api based on .Net Core with PostgreSQL
 *
 * OpenAPI spec version: v1
 * Contact: help@opendatahub.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, ORIGIN, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { ODHActivityPoiLinked } from '../models';
import { ODHActivityPoiLinkedJsonResult } from '../models';
import { SmgPoiTypes } from '../models';
/**
 * ODHActivityPoiApi - axios parameter creator
 * @export
 */
export const ODHActivityPoiApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary GET ODHActivityPoi Single
         * @param {string} id ID of the Poi
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        singleODHActivityPoi: async (id: string, language?: string, fields?: Array<string>, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling singleODHActivityPoi.');
            }
            const localVarPath = `/v1/ODHActivityPoi/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarQueryParameter['origin'] = ORIGIN;
            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary GET ODHActivityPoi Types Single
         * @param {string} id ID of the ODHActivityPoi Type
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        singleODHActivityPoiTypes: async (id: string, language?: string, fields?: Array<string>, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling singleODHActivityPoiTypes.');
            }
            const localVarPath = `/v1/ODHActivityPoiTypes/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarQueryParameter['origin'] = ORIGIN;
            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary GET ODHActivityPoi List
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {number} [pagenumber] Pagenumber
         * @param {number} [pagesize] Elements per Page, (default:10)
         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and services), (default: 255 &#x3D;&#x3D; ALL), refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ODHActivityPoiTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ODHActivityPoi Types&lt;/a&gt;, Type: Type
         * @param {string} [activitytype] Filtering by Activity Type defined by LTS (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), , refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ActivityTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ActivityTypes&lt;/a&gt;, Type: Type
         * @param {string} [poitype] Filtering by Poi Type defined by LTS (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256, &#x27;Associations&#x27; &#x3D; 512, &#x27;Companies&#x27; &#x3D; 1024), (default:&#x27;2047&#x27; &#x3D;&#x3D; ALL), , refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/PoiTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PoiTypes&lt;/a&gt;, Type: Type
         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype) &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ODHActivityPoiTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ODHActivityPoi SubTypes&lt;/a&gt;, or &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ActivityTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Activity SubTypes&lt;/a&gt;, or &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/PoiTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Poi SubTypes&lt;/a&gt;, Type: SubType
         * @param {string} [level3type] Additional Type of Level 3 the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
         * @param {string} [locfilter] Locfilter SPECIAL Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; (No Filter), (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#location-filter-locfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki locfilter&lt;/a&gt;
         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27;), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible (OR FILTER), available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;odhactivitypoi&#x27;), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilterAnd] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible (AND FILTER), available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;odhactivitypoi&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field OdhActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi), (default:&#x27;null&#x27;)
         * @param {string} [categorycodefilter] CategoryCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes?rawfilter&#x3D;eq(Type,\\\&quot;CategoryCodes\\\&quot;)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CategoryCodes
         * @param {string} [dishcodefilter] DishCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: DishCodes
         * @param {string} [ceremonycodefilter] CeremonyCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CeremonyCodes
         * @param {string} [facilitycodefilter] FacilityCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: with FacilityCodes_ prefix
         * @param {string} [cuisinecodefilter] CuisineCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CuisineCodes
         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
         * @param {boolean} [hasimage] 
         * @param {string} [tagfilter] Filter on Tags. Syntax &#x3D;and/or(TagSource.TagId,TagSource.TagId,TagId) example or(idm.summer,lts.hiking) - and(idm.themed hikes,lts.family hikings) - or(hiking) - and(idm.summer) - Combining and/or is not supported at the moment, default: &#x27;null&#x27;)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
         * @param {string} [latitude] GeoFilter FLOAT Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [longitude] GeoFilter FLOAT Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [radius] Radius INTEGER to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ODHActivityPoiGet: async (language?: string, pagenumber?: number, pagesize?: number, type?: string, activitytype?: string, poitype?: string, subtype?: string, level3type?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhtagfilterAnd?: string, odhactive?: boolean, active?: boolean, categorycodefilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, difficultyfilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, hasimage?: boolean, tagfilter?: string, publishedon?: string, updatefrom?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: Array<string>, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/ODHActivityPoi`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarQueryParameter['origin'] = ORIGIN;
            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (pagenumber !== undefined) {
                localVarQueryParameter['pagenumber'] = pagenumber;
            }

            if (pagesize !== undefined) {
                localVarQueryParameter['pagesize'] = pagesize;
            }

            if (type !== undefined) {
                localVarQueryParameter['type'] = type;
            }

            if (activitytype !== undefined) {
                localVarQueryParameter['activitytype'] = activitytype;
            }

            if (poitype !== undefined) {
                localVarQueryParameter['poitype'] = poitype;
            }

            if (subtype !== undefined) {
                localVarQueryParameter['subtype'] = subtype;
            }

            if (level3type !== undefined) {
                localVarQueryParameter['level3type'] = level3type;
            }

            if (idlist !== undefined) {
                localVarQueryParameter['idlist'] = idlist;
            }

            if (locfilter !== undefined) {
                localVarQueryParameter['locfilter'] = locfilter;
            }

            if (langfilter !== undefined) {
                localVarQueryParameter['langfilter'] = langfilter;
            }

            if (areafilter !== undefined) {
                localVarQueryParameter['areafilter'] = areafilter;
            }

            if (highlight !== undefined) {
                localVarQueryParameter['highlight'] = highlight;
            }

            if (source !== undefined) {
                localVarQueryParameter['source'] = source;
            }

            if (odhtagfilter !== undefined) {
                localVarQueryParameter['odhtagfilter'] = odhtagfilter;
            }

            if (odhtagfilterAnd !== undefined) {
                localVarQueryParameter['odhtagfilter_and'] = odhtagfilterAnd;
            }

            if (odhactive !== undefined) {
                localVarQueryParameter['odhactive'] = odhactive;
            }

            if (active !== undefined) {
                localVarQueryParameter['active'] = active;
            }

            if (categorycodefilter !== undefined) {
                localVarQueryParameter['categorycodefilter'] = categorycodefilter;
            }

            if (dishcodefilter !== undefined) {
                localVarQueryParameter['dishcodefilter'] = dishcodefilter;
            }

            if (ceremonycodefilter !== undefined) {
                localVarQueryParameter['ceremonycodefilter'] = ceremonycodefilter;
            }

            if (facilitycodefilter !== undefined) {
                localVarQueryParameter['facilitycodefilter'] = facilitycodefilter;
            }

            if (cuisinecodefilter !== undefined) {
                localVarQueryParameter['cuisinecodefilter'] = cuisinecodefilter;
            }

            if (difficultyfilter !== undefined) {
                localVarQueryParameter['difficultyfilter'] = difficultyfilter;
            }

            if (distancefilter !== undefined) {
                localVarQueryParameter['distancefilter'] = distancefilter;
            }

            if (altitudefilter !== undefined) {
                localVarQueryParameter['altitudefilter'] = altitudefilter;
            }

            if (durationfilter !== undefined) {
                localVarQueryParameter['durationfilter'] = durationfilter;
            }

            if (hasimage !== undefined) {
                localVarQueryParameter['hasimage'] = hasimage;
            }

            if (tagfilter !== undefined) {
                localVarQueryParameter['tagfilter'] = tagfilter;
            }

            if (publishedon !== undefined) {
                localVarQueryParameter['publishedon'] = publishedon;
            }

            if (updatefrom !== undefined) {
                localVarQueryParameter['updatefrom'] = updatefrom;
            }

            if (seed !== undefined) {
                localVarQueryParameter['seed'] = seed;
            }

            if (latitude !== undefined) {
                localVarQueryParameter['latitude'] = latitude;
            }

            if (longitude !== undefined) {
                localVarQueryParameter['longitude'] = longitude;
            }

            if (radius !== undefined) {
                localVarQueryParameter['radius'] = radius;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (searchfilter !== undefined) {
                localVarQueryParameter['searchfilter'] = searchfilter;
            }

            if (rawfilter !== undefined) {
                localVarQueryParameter['rawfilter'] = rawfilter;
            }

            if (rawsort !== undefined) {
                localVarQueryParameter['rawsort'] = rawsort;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary DELETE ODHActivityPoi by Id (Auth roles: DataWriter,DataDelete,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiDelete,SmgPoiManager,SmgPoiDelete)
         * @param {string} id ODHActivityPoi Id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ODHActivityPoiIdDelete: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling v1ODHActivityPoiIdDelete.');
            }
            const localVarPath = `/v1/ODHActivityPoi/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary PUT Modify existing ODHActivityPoi (Auth roles: DataWriter,DataModify,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiModify,SmgPoiManager,SmgPoiModify)
         * @param {string} id ODHActivityPoi Id
         * @param {ODHActivityPoiLinked} [body] ODHActivityPoi Object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ODHActivityPoiIdPut: async (id: string, body?: ODHActivityPoiLinked, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling v1ODHActivityPoiIdPut.');
            }
            const localVarPath = `/v1/ODHActivityPoi/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json-patch+json';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary POST Insert new ODHActivityPoi (Auth roles: DataWriter,DataCreate,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiCreate,SmgPoiManager,SmgPoiCreate)
         * @param {ODHActivityPoiLinked} [body] ODHActivityPoi Object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ODHActivityPoiPost: async (body?: ODHActivityPoiLinked, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/ODHActivityPoi`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json-patch+json';

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const needsSerialization = (typeof body !== "string") || localVarRequestOptions.headers['Content-Type'] === 'application/json';
            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary GET ODHActivityPoi Types List
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1ODHActivityPoiTypesGet: async (language?: string, fields?: Array<string>, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/ODHActivityPoiTypes`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            localVarQueryParameter['origin'] = ORIGIN;
            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
                    ? await configuration.accessToken("oauth2", [])
                    : await configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + localVarAccessTokenValue;
            }

            if (language !== undefined) {
                localVarQueryParameter['language'] = language;
            }

            if (fields) {
                localVarQueryParameter['fields'] = fields;
            }

            if (searchfilter !== undefined) {
                localVarQueryParameter['searchfilter'] = searchfilter;
            }

            if (rawfilter !== undefined) {
                localVarQueryParameter['rawfilter'] = rawfilter;
            }

            if (rawsort !== undefined) {
                localVarQueryParameter['rawsort'] = rawsort;
            }

            if (removenullvalues !== undefined) {
                localVarQueryParameter['removenullvalues'] = removenullvalues;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ODHActivityPoiApi - functional programming interface
 * @export
 */
export const ODHActivityPoiApiFp = function(configuration?: Configuration) {
    return {
        /**
         * 
         * @summary GET ODHActivityPoi Single
         * @param {string} id ID of the Poi
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleODHActivityPoi(id: string, language?: string, fields?: Array<string>, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ODHActivityPoiLinked>>> {
            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).singleODHActivityPoi(id, language, fields, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary GET ODHActivityPoi Types Single
         * @param {string} id ID of the ODHActivityPoi Type
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleODHActivityPoiTypes(id: string, language?: string, fields?: Array<string>, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SmgPoiTypes>>> {
            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).singleODHActivityPoiTypes(id, language, fields, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary GET ODHActivityPoi List
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {number} [pagenumber] Pagenumber
         * @param {number} [pagesize] Elements per Page, (default:10)
         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and services), (default: 255 &#x3D;&#x3D; ALL), refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ODHActivityPoiTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ODHActivityPoi Types&lt;/a&gt;, Type: Type
         * @param {string} [activitytype] Filtering by Activity Type defined by LTS (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), , refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ActivityTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ActivityTypes&lt;/a&gt;, Type: Type
         * @param {string} [poitype] Filtering by Poi Type defined by LTS (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256, &#x27;Associations&#x27; &#x3D; 512, &#x27;Companies&#x27; &#x3D; 1024), (default:&#x27;2047&#x27; &#x3D;&#x3D; ALL), , refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/PoiTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PoiTypes&lt;/a&gt;, Type: Type
         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype) &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ODHActivityPoiTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ODHActivityPoi SubTypes&lt;/a&gt;, or &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ActivityTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Activity SubTypes&lt;/a&gt;, or &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/PoiTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Poi SubTypes&lt;/a&gt;, Type: SubType
         * @param {string} [level3type] Additional Type of Level 3 the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
         * @param {string} [locfilter] Locfilter SPECIAL Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; (No Filter), (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#location-filter-locfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki locfilter&lt;/a&gt;
         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27;), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible (OR FILTER), available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;odhactivitypoi&#x27;), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilterAnd] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible (AND FILTER), available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;odhactivitypoi&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field OdhActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi), (default:&#x27;null&#x27;)
         * @param {string} [categorycodefilter] CategoryCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes?rawfilter&#x3D;eq(Type,\\\&quot;CategoryCodes\\\&quot;)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CategoryCodes
         * @param {string} [dishcodefilter] DishCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: DishCodes
         * @param {string} [ceremonycodefilter] CeremonyCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CeremonyCodes
         * @param {string} [facilitycodefilter] FacilityCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: with FacilityCodes_ prefix
         * @param {string} [cuisinecodefilter] CuisineCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CuisineCodes
         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
         * @param {boolean} [hasimage] 
         * @param {string} [tagfilter] Filter on Tags. Syntax &#x3D;and/or(TagSource.TagId,TagSource.TagId,TagId) example or(idm.summer,lts.hiking) - and(idm.themed hikes,lts.family hikings) - or(hiking) - and(idm.summer) - Combining and/or is not supported at the moment, default: &#x27;null&#x27;)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
         * @param {string} [latitude] GeoFilter FLOAT Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [longitude] GeoFilter FLOAT Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [radius] Radius INTEGER to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiGet(language?: string, pagenumber?: number, pagesize?: number, type?: string, activitytype?: string, poitype?: string, subtype?: string, level3type?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhtagfilterAnd?: string, odhactive?: boolean, active?: boolean, categorycodefilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, difficultyfilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, hasimage?: boolean, tagfilter?: string, publishedon?: string, updatefrom?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: Array<string>, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ODHActivityPoiLinkedJsonResult>>> {
            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).v1ODHActivityPoiGet(language, pagenumber, pagesize, type, activitytype, poitype, subtype, level3type, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhtagfilterAnd, odhactive, active, categorycodefilter, dishcodefilter, ceremonycodefilter, facilitycodefilter, cuisinecodefilter, difficultyfilter, distancefilter, altitudefilter, durationfilter, hasimage, tagfilter, publishedon, updatefrom, seed, latitude, longitude, radius, fields, searchfilter, rawfilter, rawsort, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary DELETE ODHActivityPoi by Id (Auth roles: DataWriter,DataDelete,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiDelete,SmgPoiManager,SmgPoiDelete)
         * @param {string} id ODHActivityPoi Id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiIdDelete(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).v1ODHActivityPoiIdDelete(id, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary PUT Modify existing ODHActivityPoi (Auth roles: DataWriter,DataModify,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiModify,SmgPoiManager,SmgPoiModify)
         * @param {string} id ODHActivityPoi Id
         * @param {ODHActivityPoiLinked} [body] ODHActivityPoi Object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiIdPut(id: string, body?: ODHActivityPoiLinked, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).v1ODHActivityPoiIdPut(id, body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary POST Insert new ODHActivityPoi (Auth roles: DataWriter,DataCreate,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiCreate,SmgPoiManager,SmgPoiCreate)
         * @param {ODHActivityPoiLinked} [body] ODHActivityPoi Object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiPost(body?: ODHActivityPoiLinked, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>> {
            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).v1ODHActivityPoiPost(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary GET ODHActivityPoi Types List
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiTypesGet(language?: string, fields?: Array<string>, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<SmgPoiTypes>>>> {
            const localVarAxiosArgs = await ODHActivityPoiApiAxiosParamCreator(configuration).v1ODHActivityPoiTypesGet(language, fields, searchfilter, rawfilter, rawsort, removenullvalues, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * ODHActivityPoiApi - factory interface
 * @export
 */
export const ODHActivityPoiApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * 
         * @summary GET ODHActivityPoi Single
         * @param {string} id ID of the Poi
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleODHActivityPoi(id: string, language?: string, fields?: Array<string>, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<ODHActivityPoiLinked>> {
            return ODHActivityPoiApiFp(configuration).singleODHActivityPoi(id, language, fields, removenullvalues, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary GET ODHActivityPoi Types Single
         * @param {string} id ID of the ODHActivityPoi Type
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async singleODHActivityPoiTypes(id: string, language?: string, fields?: Array<string>, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<SmgPoiTypes>> {
            return ODHActivityPoiApiFp(configuration).singleODHActivityPoiTypes(id, language, fields, removenullvalues, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary GET ODHActivityPoi List
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {number} [pagenumber] Pagenumber
         * @param {number} [pagesize] Elements per Page, (default:10)
         * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and services), (default: 255 &#x3D;&#x3D; ALL), refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ODHActivityPoiTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ODHActivityPoi Types&lt;/a&gt;, Type: Type
         * @param {string} [activitytype] Filtering by Activity Type defined by LTS (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), , refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ActivityTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ActivityTypes&lt;/a&gt;, Type: Type
         * @param {string} [poitype] Filtering by Poi Type defined by LTS (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256, &#x27;Associations&#x27; &#x3D; 512, &#x27;Companies&#x27; &#x3D; 1024), (default:&#x27;2047&#x27; &#x3D;&#x3D; ALL), , refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/PoiTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PoiTypes&lt;/a&gt;, Type: Type
         * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype) &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ODHActivityPoiTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ODHActivityPoi SubTypes&lt;/a&gt;, or &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ActivityTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Activity SubTypes&lt;/a&gt;, or &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/PoiTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Poi SubTypes&lt;/a&gt;, Type: SubType
         * @param {string} [level3type] Additional Type of Level 3 the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
         * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
         * @param {string} [locfilter] Locfilter SPECIAL Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; (No Filter), (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#location-filter-locfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki locfilter&lt;/a&gt;
         * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
         * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
         * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
         * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27;), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible (OR FILTER), available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;odhactivitypoi&#x27;), (default:&#x27;null&#x27;)
         * @param {string} [odhtagfilterAnd] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible (AND FILTER), available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;odhactivitypoi&#x27;), (default:&#x27;null&#x27;)
         * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field OdhActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi), (default:&#x27;null&#x27;)
         * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi), (default:&#x27;null&#x27;)
         * @param {string} [categorycodefilter] CategoryCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes?rawfilter&#x3D;eq(Type,\\\&quot;CategoryCodes\\\&quot;)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CategoryCodes
         * @param {string} [dishcodefilter] DishCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: DishCodes
         * @param {string} [ceremonycodefilter] CeremonyCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CeremonyCodes
         * @param {string} [facilitycodefilter] FacilityCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: with FacilityCodes_ prefix
         * @param {string} [cuisinecodefilter] CuisineCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CuisineCodes
         * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
         * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
         * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
         * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
         * @param {boolean} [hasimage] 
         * @param {string} [tagfilter] Filter on Tags. Syntax &#x3D;and/or(TagSource.TagId,TagSource.TagId,TagId) example or(idm.summer,lts.hiking) - and(idm.themed hikes,lts.family hikings) - or(hiking) - and(idm.summer) - Combining and/or is not supported at the moment, default: &#x27;null&#x27;)
         * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
         * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
         * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
         * @param {string} [latitude] GeoFilter FLOAT Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [longitude] GeoFilter FLOAT Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {string} [radius] Radius INTEGER to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiGet(language?: string, pagenumber?: number, pagesize?: number, type?: string, activitytype?: string, poitype?: string, subtype?: string, level3type?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhtagfilterAnd?: string, odhactive?: boolean, active?: boolean, categorycodefilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, difficultyfilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, hasimage?: boolean, tagfilter?: string, publishedon?: string, updatefrom?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: Array<string>, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<ODHActivityPoiLinkedJsonResult>> {
            return ODHActivityPoiApiFp(configuration).v1ODHActivityPoiGet(language, pagenumber, pagesize, type, activitytype, poitype, subtype, level3type, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhtagfilterAnd, odhactive, active, categorycodefilter, dishcodefilter, ceremonycodefilter, facilitycodefilter, cuisinecodefilter, difficultyfilter, distancefilter, altitudefilter, durationfilter, hasimage, tagfilter, publishedon, updatefrom, seed, latitude, longitude, radius, fields, searchfilter, rawfilter, rawsort, removenullvalues, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary DELETE ODHActivityPoi by Id (Auth roles: DataWriter,DataDelete,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiDelete,SmgPoiManager,SmgPoiDelete)
         * @param {string} id ODHActivityPoi Id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiIdDelete(id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return ODHActivityPoiApiFp(configuration).v1ODHActivityPoiIdDelete(id, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary PUT Modify existing ODHActivityPoi (Auth roles: DataWriter,DataModify,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiModify,SmgPoiManager,SmgPoiModify)
         * @param {string} id ODHActivityPoi Id
         * @param {ODHActivityPoiLinked} [body] ODHActivityPoi Object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiIdPut(id: string, body?: ODHActivityPoiLinked, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return ODHActivityPoiApiFp(configuration).v1ODHActivityPoiIdPut(id, body, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary POST Insert new ODHActivityPoi (Auth roles: DataWriter,DataCreate,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiCreate,SmgPoiManager,SmgPoiCreate)
         * @param {ODHActivityPoiLinked} [body] ODHActivityPoi Object
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiPost(body?: ODHActivityPoiLinked, options?: AxiosRequestConfig): Promise<AxiosResponse<void>> {
            return ODHActivityPoiApiFp(configuration).v1ODHActivityPoiPost(body, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary GET ODHActivityPoi Types List
         * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
         * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
         * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
         * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
         * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
         * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1ODHActivityPoiTypesGet(language?: string, fields?: Array<string>, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<SmgPoiTypes>>> {
            return ODHActivityPoiApiFp(configuration).v1ODHActivityPoiTypesGet(language, fields, searchfilter, rawfilter, rawsort, removenullvalues, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * ODHActivityPoiApi - object-oriented interface
 * @export
 * @class ODHActivityPoiApi
 * @extends {BaseAPI}
 */
export class ODHActivityPoiApi extends BaseAPI {
    /**
     * 
     * @summary GET ODHActivityPoi Single
     * @param {string} id ID of the Poi
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */
    public async singleODHActivityPoi(id: string, language?: string, fields?: Array<string>, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<ODHActivityPoiLinked>> {
        return ODHActivityPoiApiFp(this.configuration).singleODHActivityPoi(id, language, fields, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * 
     * @summary GET ODHActivityPoi Types Single
     * @param {string} id ID of the ODHActivityPoi Type
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */
    public async singleODHActivityPoiTypes(id: string, language?: string, fields?: Array<string>, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<SmgPoiTypes>> {
        return ODHActivityPoiApiFp(this.configuration).singleODHActivityPoiTypes(id, language, fields, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * 
     * @summary GET ODHActivityPoi List
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {number} [pagenumber] Pagenumber
     * @param {number} [pagesize] Elements per Page, (default:10)
     * @param {string} [type] Type of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: 1 &#x3D; Wellness, 2 &#x3D; Winter, 4 &#x3D; Summer, 8 &#x3D; Culture, 16 &#x3D; Other, 32 &#x3D; Gastronomy, 64 &#x3D; Mobility, 128 &#x3D; Shops and services), (default: 255 &#x3D;&#x3D; ALL), refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ODHActivityPoiTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ODHActivityPoi Types&lt;/a&gt;, Type: Type
     * @param {string} [activitytype] Filtering by Activity Type defined by LTS (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK: &#x27;Mountains &#x3D; 1&#x27;,&#x27;Cycling &#x3D; 2&#x27;,&#x27;Local tours &#x3D; 4&#x27;,&#x27;Horses &#x3D; 8&#x27;,&#x27;Hiking &#x3D; 16&#x27;,&#x27;Running and fitness &#x3D; 32&#x27;,&#x27;Cross-country ski-track &#x3D; 64&#x27;,&#x27;Tobbogan run &#x3D; 128&#x27;,&#x27;Slopes &#x3D; 256&#x27;,&#x27;Lifts &#x3D; 512&#x27;), (default:&#x27;1023&#x27; &#x3D;&#x3D; ALL), , refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ActivityTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ActivityTypes&lt;/a&gt;, Type: Type
     * @param {string} [poitype] Filtering by Poi Type defined by LTS (&#x27;null&#x27; &#x3D; Filter disabled, possible values: BITMASK &#x27;Doctors, Pharmacies &#x3D; 1&#x27;,&#x27;Shops &#x3D; 2&#x27;,&#x27;Culture and sights&#x3D; 4&#x27;,&#x27;Nightlife and entertainment &#x3D; 8&#x27;,&#x27;Public institutions &#x3D; 16&#x27;,&#x27;Sports and leisure &#x3D; 32&#x27;,&#x27;Traffic and transport &#x3D; 64&#x27;, &#x27;Service providers&#x27; &#x3D; 128, &#x27;Craft&#x27; &#x3D; 256, &#x27;Associations&#x27; &#x3D; 512, &#x27;Companies&#x27; &#x3D; 1024), (default:&#x27;2047&#x27; &#x3D;&#x3D; ALL), , refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/PoiTypes?rawfilter&#x3D;eq(Type,%27Type%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;PoiTypes&lt;/a&gt;, Type: Type
     * @param {string} [subtype] Subtype of the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype) &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ODHActivityPoiTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;ODHActivityPoi SubTypes&lt;/a&gt;, or &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/ActivityTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Activity SubTypes&lt;/a&gt;, or &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/PoiTypes?rawfilter&#x3D;eq(Type,%27SubType%27)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Poi SubTypes&lt;/a&gt;, Type: SubType
     * @param {string} [level3type] Additional Type of Level 3 the ODHActivityPoi (&#x27;null&#x27; &#x3D; Filter disabled, BITMASK Filter, available SubTypes depends on the selected Maintype, SubType reference to ODHActivityPoiTypes)
     * @param {string} [idlist] IDFilter (Separator &#x27;,&#x27; List of ODHActivityPoi IDs), (default:&#x27;null&#x27;)
     * @param {string} [locfilter] Locfilter SPECIAL Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMVEREINID &#x3D; (Filter by Tourismverein), mun + MUNICIPALITYID &#x3D; (Filter by Municipality), fra + FRACTIONID &#x3D; (Filter by Fraction), &#x27;null&#x27; &#x3D; (No Filter), (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#location-filter-locfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki locfilter&lt;/a&gt;
     * @param {string} [langfilter] ODHActivityPoi Langfilter (returns only SmgPois available in the selected Language, Separator &#x27;,&#x27; possible values: &#x27;de,it,en,nl,sc,pl,fr,ru&#x27;, &#x27;null&#x27;: Filter disabled)
     * @param {string} [areafilter] AreaFilter (Alternate Locfilter, can be combined with locfilter) (Separator &#x27;,&#x27; possible values: reg + REGIONID &#x3D; (Filter by Region), tvs + TOURISMASSOCIATIONID &#x3D; (Filter by Tourismassociation), skr + SKIREGIONID &#x3D; (Filter by Skiregion), ska + SKIAREAID &#x3D; (Filter by Skiarea), are + AREAID &#x3D; (Filter by LTS Area), &#x27;null&#x27; &#x3D; No Filter), (default:&#x27;null&#x27;)
     * @param {boolean} [highlight] Hightlight Filter (possible values: &#x27;false&#x27; &#x3D; only ODHActivityPoi with Highlight false, &#x27;true&#x27; &#x3D; only ODHActivityPoi with Highlight true), (default:&#x27;null&#x27;)
     * @param {string} [source] Source Filter (possible Values: &#x27;null&#x27; Displays all ODHActivityPoi, &#x27;None&#x27;, &#x27;ActivityData&#x27;, &#x27;PoiData&#x27;, &#x27;GastronomicData&#x27;, &#x27;MuseumData&#x27;, &#x27;Magnolia&#x27;, &#x27;Content&#x27;, &#x27;SuedtirolWein&#x27;, &#x27;ArchApp&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilter] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible (OR FILTER), available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;odhactivitypoi&#x27;), (default:&#x27;null&#x27;)
     * @param {string} [odhtagfilterAnd] ODH Taglist Filter (refers to Array SmgTags) (String, Separator &#x27;,&#x27; more Tags possible (AND FILTER), available Tags reference to &#x27;v1/ODHTag?validforentity&#x3D;odhactivitypoi&#x27;), (default:&#x27;null&#x27;)
     * @param {boolean} [odhactive] ODH Active (Published) ODHActivityPoi Filter (Refers to field OdhActive) (possible Values: &#x27;true&#x27; only published ODHActivityPoi, &#x27;false&#x27; only not published ODHActivityPoi), (default:&#x27;null&#x27;)
     * @param {boolean} [active] Active ODHActivityPoi Filter (possible Values: &#x27;true&#x27; only active ODHActivityPoi, &#x27;false&#x27; only not active ODHActivityPoi), (default:&#x27;null&#x27;)
     * @param {string} [categorycodefilter] CategoryCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes?rawfilter&#x3D;eq(Type,\\\&quot;CategoryCodes\\\&quot;)\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CategoryCodes
     * @param {string} [dishcodefilter] DishCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: DishCodes
     * @param {string} [ceremonycodefilter] CeremonyCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CeremonyCodes
     * @param {string} [facilitycodefilter] FacilityCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: with FacilityCodes_ prefix
     * @param {string} [cuisinecodefilter] CuisineCode Filter (Only for ODHActivityTypes of type Gastronomy) (BITMASK) refers to &lt;a href&#x3D;\&quot;https://tourism.opendatahub.com/v1/GastronomyTypes\&quot; target&#x3D;\&quot;_blank\&quot;&gt;GastronomyTypes&lt;/a&gt;, Type: CuisineCodes
     * @param {string} [difficultyfilter] Difficulty Filter (possible values: &#x27;1&#x27; &#x3D; easy, &#x27;2&#x27; &#x3D; medium, &#x27;3&#x27; &#x3D; difficult), (default:&#x27;null&#x27;)
     * @param {string} [distancefilter] Distance Range Filter (Separator &#x27;,&#x27; example Value: 15,40 Distance from 15 up to 40 Km), (default:&#x27;null&#x27;)
     * @param {string} [altitudefilter] Altitude Range Filter (Separator &#x27;,&#x27; example Value: 500,1000 Altitude from 500 up to 1000 metres), (default:&#x27;null&#x27;)
     * @param {string} [durationfilter] Duration Range Filter (Separator &#x27;,&#x27; example Value: 1,3 Duration from 1 to 3 hours), (default:&#x27;null&#x27;)
     * @param {boolean} [hasimage] 
     * @param {string} [tagfilter] Filter on Tags. Syntax &#x3D;and/or(TagSource.TagId,TagSource.TagId,TagId) example or(idm.summer,lts.hiking) - and(idm.themed hikes,lts.family hikings) - or(hiking) - and(idm.summer) - Combining and/or is not supported at the moment, default: &#x27;null&#x27;)
     * @param {string} [publishedon] Published On Filter (Separator &#x27;,&#x27; List of publisher IDs), (default:&#x27;null&#x27;)
     * @param {string} [updatefrom] Returns data changed after this date Format (yyyy-MM-dd), (default: &#x27;null&#x27;)
     * @param {string} [seed] Seed &#x27;1 - 10&#x27; for Random Sorting, &#x27;0&#x27; generates a Random Seed, not provided disables Random Sorting, (default:&#x27;null&#x27;)
     * @param {string} [latitude] GeoFilter FLOAT Latitude Format: &#x27;46.624975&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
     * @param {string} [longitude] GeoFilter FLOAT Longitude Format: &#x27;11.369909&#x27;, &#x27;null&#x27; &#x3D; disabled, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
     * @param {string} [radius] Radius INTEGER to Search in Meters. Only Object withhin the given point and radius are returned and sorted by distance. Random Sorting is disabled if the GeoFilter Informations are provided, (default:&#x27;null&#x27;) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Geosorting-and-Locationfilter-usage#geosorting-functionality\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki geosort&lt;/a&gt;
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
     * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
     * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */
    public async v1ODHActivityPoiGet(language?: string, pagenumber?: number, pagesize?: number, type?: string, activitytype?: string, poitype?: string, subtype?: string, level3type?: string, idlist?: string, locfilter?: string, langfilter?: string, areafilter?: string, highlight?: boolean, source?: string, odhtagfilter?: string, odhtagfilterAnd?: string, odhactive?: boolean, active?: boolean, categorycodefilter?: string, dishcodefilter?: string, ceremonycodefilter?: string, facilitycodefilter?: string, cuisinecodefilter?: string, difficultyfilter?: string, distancefilter?: string, altitudefilter?: string, durationfilter?: string, hasimage?: boolean, tagfilter?: string, publishedon?: string, updatefrom?: string, seed?: string, latitude?: string, longitude?: string, radius?: string, fields?: Array<string>, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<ODHActivityPoiLinkedJsonResult>> {
        return ODHActivityPoiApiFp(this.configuration).v1ODHActivityPoiGet(language, pagenumber, pagesize, type, activitytype, poitype, subtype, level3type, idlist, locfilter, langfilter, areafilter, highlight, source, odhtagfilter, odhtagfilterAnd, odhactive, active, categorycodefilter, dishcodefilter, ceremonycodefilter, facilitycodefilter, cuisinecodefilter, difficultyfilter, distancefilter, altitudefilter, durationfilter, hasimage, tagfilter, publishedon, updatefrom, seed, latitude, longitude, radius, fields, searchfilter, rawfilter, rawsort, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * 
     * @summary DELETE ODHActivityPoi by Id (Auth roles: DataWriter,DataDelete,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiDelete,SmgPoiManager,SmgPoiDelete)
     * @param {string} id ODHActivityPoi Id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */
    public async v1ODHActivityPoiIdDelete(id: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return ODHActivityPoiApiFp(this.configuration).v1ODHActivityPoiIdDelete(id, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * 
     * @summary PUT Modify existing ODHActivityPoi (Auth roles: DataWriter,DataModify,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiModify,SmgPoiManager,SmgPoiModify)
     * @param {string} id ODHActivityPoi Id
     * @param {ODHActivityPoiLinked} [body] ODHActivityPoi Object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */
    public async v1ODHActivityPoiIdPut(id: string, body?: ODHActivityPoiLinked, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return ODHActivityPoiApiFp(this.configuration).v1ODHActivityPoiIdPut(id, body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * 
     * @summary POST Insert new ODHActivityPoi (Auth roles: DataWriter,DataCreate,ODHActivityPoiWriter,ODHActivityPoiManager,ODHActivityPoiCreate,SmgPoiManager,SmgPoiCreate)
     * @param {ODHActivityPoiLinked} [body] ODHActivityPoi Object
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */
    public async v1ODHActivityPoiPost(body?: ODHActivityPoiLinked, options?: AxiosRequestConfig) : Promise<AxiosResponse<void>> {
        return ODHActivityPoiApiFp(this.configuration).v1ODHActivityPoiPost(body, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * 
     * @summary GET ODHActivityPoi Types List
     * @param {string} [language] Language field selector, displays data and fields available in the selected language (default:&#x27;null&#x27; all languages are displayed)
     * @param {Array<string>} [fields] Select fields to display, More fields are indicated by separator &#x27;,&#x27; example fields&#x3D;Id,Active,Shortname (default:&#x27;null&#x27; all fields are displayed). &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#fields\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki fields&lt;/a&gt;
     * @param {string} [searchfilter] String to search for, Title in all languages are searched, (default: null) &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters%2C-fields%2C-language%2C-searchfilter%2C-removenullvalues%2C-updatefrom#searchfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki searchfilter&lt;/a&gt;
     * @param {string} [rawfilter] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawfilter\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawfilter&lt;/a&gt;
     * @param {string} [rawsort] &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Using-rawfilter-and-rawsort-on-the-Tourism-Api#rawsort\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Wiki rawsort&lt;/a&gt;
     * @param {boolean} [removenullvalues] Remove all Null values from json output. Useful for reducing json size. By default set to false. Documentation on &lt;a href&#x3D;\&quot;https://github.com/noi-techpark/odh-docs/wiki/Common-parameters,-fields,-language,-searchfilter,-removenullvalues,-updatefrom#removenullvalues\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Opendatahub Wiki&lt;/a&gt;
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ODHActivityPoiApi
     */
    public async v1ODHActivityPoiTypesGet(language?: string, fields?: Array<string>, searchfilter?: string, rawfilter?: string, rawsort?: string, removenullvalues?: boolean, options?: AxiosRequestConfig) : Promise<AxiosResponse<Array<SmgPoiTypes>>> {
        return ODHActivityPoiApiFp(this.configuration).v1ODHActivityPoiTypesGet(language, fields, searchfilter, rawfilter, rawsort, removenullvalues, options).then((request) => request(this.axios, this.basePath));
    }
}
